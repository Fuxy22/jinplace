= jinplace jquery plugin =

==Description==

This is a plugin for jQuery for in-place editing of data on the page.
Html markup is used to annotate the elements to be edited, and you can
also specify options in javascript.

Basic usage is

<syntaxhighlight lang="javascript">
$('.editable').jinplace();
</syntaxhighlight>

===See also===
Some alternative solutions are
* jeditable
* best_in_place

== data attributes ==

; data-type
: The input field type to be created. The possible types are
input, textarea or select. The type ''input'' is a regular text input
field. The ''textarea'' is a multiline area, and ''select'' is for an
option list.

;data-url
: The url to post the result to.

;data-data
: If this is given it will be used instead of the contents of
the original editable element.
If this is a ''select'' control, then you must supply this field since
you need to supply all the choices for the option list.
The value is plain text for input and textarea fields, and JSON for select
fields.

;data-loadurl
: A URL to load the editable form of the data. Once the data is
returned it is treated exactly as if it were supplied directly as
''data-data''.

;data-object-name
: You can use this to supply a name to identify the object to be
modified to the server. See below.

;data-attribute
: You can use this to supply a name to identify the object field to
be modified.  See below.

;data-ok-button
: If present then an OK button will be added to the editing area with
the text that you supply.

;data-cancel-button
: If present then a cancel button will be added to the editing area with
the text that you supply.

;data-input-class
: The input field will have this class.

;data-activator
: By default, clicking on the editable field itself will activate the
edit area. You can give the id of another element if you want to use
a separate edit button for example.

;data-text-only
: If true, the element will be set as plain text, that is any html
will be visible as text and not as formatting.
The default is true, so you have to set it to 'false' if you want to
allow html formatting.  If set to false, make sure that your
application is secure.

;data-nil
: This is the string that is displayed when the editing area is empty.
You can set it to something like 'Click to edit'. By default it is the
string '[ --- ]'

==Features==
* Editing can be activated by clicking on the text or a separate button.
* Optional OK and Cancel buttons with configurable text
* Textareas autogrow

== Posting to server ==

The item to be modified on the server can be identified by any of the
following attributes on the edited element.

* data-url
* id
* data-object-name
* data-attribute
